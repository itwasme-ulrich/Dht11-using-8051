C51 COMPILER V9.60.0.0   LCD16X2_4BIT                                                      09/18/2022 22:39:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD16X2_4BIT
OBJECT MODULE PLACED IN LCD16x2_4bit.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD16x2_4bit.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*  
   2             LCD16x2 4 bit 8051 interface
   3             http://www.electronicwings.com
   4          */
   5          
   6          
   7          #include<reg51.h>
   8          #include"LCD16x2_4bit.h"
   9          
  10          sfr LCD_Port=0x90;              /* P1 port as data port */
  11          sbit rs=P1^0;                   /* Register select pin */
  12          sbit rw=P1^1;                   /* Read/Write pin */
  13          sbit en=P1^2;                   /* Enable pin */
  14          
  15          /* Function to provide delay Approx 1ms with 11.0592 Mhz crystal*/
  16          void delay(unsigned int count)        
  17          {
  18   1        int i,j;
  19   1        for(i=0;i<count;i++)
  20   1        for(j=0;j<112;j++);
  21   1      }
  22          
  23          void LCD_Command (char cmnd)    /* LCD16x2 command funtion */
  24          {
  25   1        LCD_Port =(LCD_Port & 0x0F) | (cmnd & 0xF0); /* sending upper nibble */
  26   1        rs=0;                     /* command reg. */
  27   1        rw=0;                     /* Write operation */
  28   1        en=1; 
  29   1        delay(1);
  30   1        en=0;
  31   1        delay(2);
  32   1      
  33   1        LCD_Port = (LCD_Port & 0x0F) | (cmnd << 4);  /* sending lower nibble */
  34   1        en=1;                       /* enable pulse */
  35   1        delay(1);
  36   1        en=0;
  37   1        delay(5);
  38   1      }
  39          
  40          void LCD_Char (char char_data)  /* LCD data write function */
  41          {
  42   1        LCD_Port =(LCD_Port & 0x0F) | (char_data & 0xF0); /* sending upper nibble */    
  43   1        rs=1;                       /*Data reg.*/
  44   1        rw=0;                       /*Write operation*/
  45   1        en=1;           
  46   1        delay(1);
  47   1        en=0;
  48   1        delay(2);
  49   1      
  50   1        LCD_Port = (LCD_Port & 0x0F) | (char_data << 4);  /* sending lower nibble */
  51   1        en=1;                       /* enable pulse */
  52   1        delay(1);
  53   1        en=0;
  54   1        delay(5);
  55   1      }
C51 COMPILER V9.60.0.0   LCD16X2_4BIT                                                      09/18/2022 22:39:41 PAGE 2   

  56          
  57          void LCD_String (char *str)     /* Send string to LCD function */
  58          {
  59   1        int i;
  60   1        for(i=0;str[i]!=0;i++)        /* Send each char of string till the NULL */
  61   1        {
  62   2          LCD_Char (str[i]);          /* Call LCD data write */
  63   2        }
  64   1      }
  65          
  66          void LCD_String_xy (char row, char pos, char *str)  /* Send string to LCD function */
  67          {
  68   1        if (row == 0)
  69   1        LCD_Command((pos & 0x0F)|0x80); /* Command of first row and required position<16 */
  70   1        else if (row == 1)
  71   1        LCD_Command((pos & 0x0F)|0xC0); /* Command of first row and required position<16 */
  72   1        LCD_String(str);                /* Call LCD string function */
  73   1      }
  74          
  75          void LCD_Init (void)              /* LCD Initialize function */
  76          {
  77   1        delay(20);          /* LCD Power ON Initialization time >15ms */
  78   1        
  79   1        LCD_Command (0x02);       /* 4bit mode */
  80   1        LCD_Command (0x28);       /* Initialization of 16X2 LCD in 4bit mode */
  81   1        LCD_Command (0x0C);       /* Display ON Cursor OFF */
  82   1        LCD_Command (0x06);       /* Auto Increment cursor */
  83   1        LCD_Command (0x01);       /* clear display */
  84   1        delay(3);
  85   1        LCD_Command (0x80);       /* cursor at home position */
  86   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    264    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
